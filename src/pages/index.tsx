import { SignInButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
// import Link from "next/link";

import { type RouterOutputs, api } from "~/utils/api";

import dayjs from "dayjs";
import relativetime from "dayjs/plugin/relativeTime";

dayjs.extend(relativetime);

const CreatePostWizard = () => {
  const { user } = useUser();
  // console.log(user)

  if (!user) return null;

  return (
    <div className="flex w-full gap-3">
      <Image
        alt={`Profile Image`}
        src={user.profileImageUrl}
        className="rounded-full"
        width={56}
        height={56}
      />
      <input
        type="text"
        placeholder="Type some texts!"
        className="grow bg-transparent outline-none"
      />
    </div>
  );
};

type PostWithUser = RouterOutputs["post"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div className="flex border-t border-slate-400 py-4 px-2" key={post.id}>
      <Image
        src={author.profilePicture}
        className="gap-4 rounded-full"
        alt={author.username}
        width={56}
        height={56}
      />
      <div className="flex-col">
        <div className="flex font-bold text-slate-200 gap-1">
          <span>{`@${author.username}`}</span>{" "}
          <span className="font-thin"> â€¢ {`${dayjs(post.createdAt).fromNow()}`}</span>
        </div>
        {post.content}
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  const user = useUser();
  const { data, isLoading } = api.post.getAll.useQuery();

  if (isLoading) return <div>Loading ...</div>;
  if (!data) return <div>Something went wrong.</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex h-screen justify-center">
        <div className="h-full w-full border-x border-slate-400 md:max-w-2xl">
          {!user.isSignedIn && (
            <div className="flex border-b border-slate-400">
              <SignInButton />
            </div>
          )}
          {!!user.isSignedIn && <CreatePostWizard />}
          {/* {!!user.isSignedIn && <SignOutButton />} */}
          <div className="flex flex-col">
            {data?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id} />
            ))}
          </div>
        </div>
      </div>
    </>
  );
};

export default Home;
